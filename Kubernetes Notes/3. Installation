There are multiple ways to install kubernetes on local or CSP 
1. Local K8S cluster (single node k8s cluster)
2. Multi-node k8s cluster
 - Self Managed k8s cluster
 - Managed k8s cluster
 - kops
 - rancher

1. Local K8S cluster (single node k8s cluster)

minikube - https://minikube.sigs.k8s.io/docs/start/
- choco install minikube [windows]
- brew install minikube [macOs]

kind - https://kind.sigs.k8s.io/docs/user/quick-start/#installation
- brew install kind
- choco install kind

Docker Desktop -  https://docs.docker.com/desktop/kubernetes/


Multi-node k8s cluster:
1. Self Managed k8s cluster
kubeadm - https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
    kubeadm --> We can setup multi node k8's cluster using kubeadm.
    kubespray --> We can setup multi node k8s cluster using kubespray
     (Ansbile Playbooks Used internally by kubespray).

2. Managed K8s cluster
EKS - Amazon Elastic Kubernetes Service         - https://eksctl.io/
[install with ui or eksctl(also managed my aws)]
GKE - Google Kubernetes Engine
AKS - Azure Kubernetes Service


3. KOPS  - https://kubernetes.io/docs/setup/production-environment/tools/kops/
- kops is a software use to create production GRADE/ready k8s in AWS and azure for the kops beta version  
-  highly available kubernetes services in Cloud like AWS.
- KOPS will leverage Cloud Sevices like: [vpc, AutoScaling Groups, LoadBalancer, Launch Template/configuration, ec2-instances nodes [workerNodes and masterNodes] 
- No, Kops is not a self-managed cluster. It is a tool for creating and managing Kubernetes clusters.
kops - https://kubernetes.io/docs/setup/production-environment/tools/kops/
MN: [kubectl and awcli must be installed]



4. rancher
- Using Rancher we can deploy both managed and self managed k8s
- Rancher serves as a glass to access and manage multiple k8s from the dashboard [UI]  -> rancher dashboard 






FIRST BEGINNER INSTALLATION: 

kubeadm - https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
---
#!/bin/bash

# Update package lists
sudo apt-get update

# Install necessary dependencies
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

# Add Kubernetes signing key
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg

# Add Kubernetes repository
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update package lists again with the new repository
sudo apt-get update

# Install Kubeadm, Kubelet, and Kubectl
sudo apt-get install -y kubelet kubeadm kubectl

# Prevent automatic updates of Kubernetes packages
sudo apt-mark hold kubelet kubeadm kubectl

---

IN:
authentication via kubeconfig 
authorisation via RBAC
